---
k8s_namespace: cmy-monitoring
compute_sre_resource_labels: some-compute-lable
prometheus_operator_chart_release_name: cmy-prometheus-operator
k8s_prometheus_scrape_config_secret_name: cmy-prometheus-scrape-config
k8s_prometheus_thanos_secret_name: cmy-thanos-objstore-config
kubeconfig_file:  "~/.kube/config"
# Default cluster name if not defined
monitoring_k8s_cluster_name: "{{ compute_k8s_cluster  }}"
monitoring_k8s_cluster: "{{ monitoring_k8s_cluster_name.replace('_','-') }}"
monitoring_region_name: "{{ region_name }}"
monitoring_zone_name: "{{ zone_name }}"

# Default hostname exposed through ingress
prometheus_host: "prometheus.{{ monitoring_k8s_cluster }}.{{ system_dns_bind_zone_domains.internal.name }}"
alertmanager_host: "alertmanager.{{ monitoring_k8s_cluster }}.{{ system_dns_bind_zone_domains.internal.name }}"

# Default prometheus monitoring configuration
k8s_prometheus_monitor_prefix: cmy-monitoring
prometheus_namespace_team_label: label_cloudmobility_io_team
prometheus_namespaces: "{{ k8s_prometheus_monitor_prefix }}.*|kube-system|kube-public|kube-node-lease"

# Default prometheus monitoring labels extend by group
prometheus_extend_team_label: "* on (namespace) group_left({{ prometheus_namespace_team_label }}) (kube_namespace_labels)"
k8s_prometheus_monitor_extend_hostname_label: "* on(instance) group_left(nodename) (node_uname_info)"

# Default prometheus alert conditions
prometheus_alerts:
  kubeApiDown: true
  kubeControllerManagerDown: true
  kubeSchedulerDown: true
  kubeletDown: true
  # todo: enable if k8s version >= 1.18 on target: https://cloudmobility.atlassian.net/browse/PIN-596?focusedCommentId=13476
  aggregatedAPIDown: false

# Default prometheus monitoring alert teams
prometheus_alert_teams:
  watchdog: watchdog
  barekube: sre
  ceph: sre
  network: sre
  sre: sre
  infra: sre
  cns: middleware
  cns_ui: devxp
  corens: corens

# Prometheus Operator
prometheus_operator_config:
  enabled: true
  createCustomResource: true
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 200m
      memory: 256Mi
  configReloaderCpu: 100m
  configReloaderMemory: 25Mi
  logLevel: error

# Prometheus config default
prometheus_config:
  enabled: true
  replicaCount: 2
  ingress:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "true"  # noqa unnecessary-quotes
    hosts:
      - name: "{{ prometheus_host }}"
        path: /
    hostname: "{{ prometheus_host }}"
    tls:
      - hosts:
          - "{{ prometheus_host }}"
        secretName: "{{ prometheus_host }}"
  resources:
    limits:
      cpu: 2000m
      memory: 5000Mi
    requests:
      cpu: 500m
      memory: 4000Mi
  scrapeInterval: 30s
  evaluationInterval: 30s
  retention: 10d
  logLevel: error
  persistence:
    enabled: true
    storageClass: standard
    size: 250Gi

prometheus_enabled_features: []
# Default prometheus monitoring alert rules
prometheus_rules:
  # Cluster
  alertmanager: true
  prometheusOperator: true
  prometheus: true
  general: true
  k8s: true
  kubernetesSystem: true
  kubeApiserver: true
  kubeApiserverSlos: true
  kubeApiserverAvailability: true
  kubelet: true
  kubeStateMetrics: true
  kubePrometheusNodeRecording: true
  kubePrometheusGeneral: true
  kubernetesStorage: true
  kubernetesResources: true
  kubernetesApps: true
  kubeScheduler: true
  kubeControllerManager: true
  etcd: true
  metallb: true
  elasticsearch: false
  # External
  node: false
  network: false
  blackbox: false
  ssl: false

prometheus_monitor_components:
  cluster:
    blackbox: true
    cilium: false
    coreDns: false
    etcdCilium: false
    etcdK8s: false
    kubeApiServer: true
    kubeControllerManager: true
    kubelet: true
    kubeProxy: true
    kubeScheduler: true
    kubeStateMetrics: true
  external:
    blackbox: true
    computeNodes: true
    dns: true
    haproxy: true
    infraNodes: true
    networkNodes: true
    rackhd: true
    storageNodes: true

monitoring_kube_state_metrics_service_type: ClusterIP
kube_state_metrics_load_balancer_ip: ""
monitoring_kube_state_metrics_replica_count: 1

alertmanager_values:
  enabled: true
  replicaCount: 2
  ingress:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "true"  # noqa unnecessary-quotes
    hosts:
      - name: "{{ alertmanager_host }}"
        path: /
    hostname: "{{ alertmanager_host }}"
    tls:
      - hosts:
          - "{{ alertmanager_host }}"
        secretName: "{{ alertmanager_host }}"
  resources:
    limits:
      cpu: 100m
      memory: 200Mi
    requests:
      cpu: 50m
      memory: 200Mi
  retention: 120h
  logLevel: error
  persistence:
    enabled: true
    storageClass: standard
    size: 2Gi
