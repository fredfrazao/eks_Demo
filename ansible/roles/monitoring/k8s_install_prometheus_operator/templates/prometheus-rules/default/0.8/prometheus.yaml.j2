#jinja2: trim_blocks: True, lstrip_blocks: True
# {{ ansible_managed }}
# Generated from 'prometheus' group
# Do not change in-place! In order to change this file first read following link:
# https://git.daimler.com/CCP/platform-infrastructure/tree/master/scripts/prometheus-rules-generator.py
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: "prometheus"
  namespace: {{ k8s_namespace }}
spec:
{% if not prometheus_rules.prometheus %}
  groups: []
{% else %}
  groups:
  - name: prometheus
    rules:
    - alert: PrometheusBadConfig
      annotations:
    {% raw %}
        description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has failed to reload its configuration.
    {% endraw %}
        runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/prometheusbadconfig
        summary: Failed Prometheus configuration reload.
      expr: |-
        # Without max_over_time, failed scrapes could create false negatives, see
        # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
        max_over_time(prometheus_config_last_reload_successful{job="{{ prometheus_operator_chart_release_name }}-prometheus",namespace="default"}[5m]) == 0
      for: 10m
      labels:
        severity: critical
        notify_team: {{ prometheus_alert_teams.sre }}
    - alert: PrometheusNotificationQueueRunningFull
      annotations:
    {% raw %}
        description: Alert notification queue of Prometheus {{$labels.namespace}}/{{$labels.pod}} is running full.
    {% endraw %}
        runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/prometheusnotificationqueuerunningfull
        summary: Prometheus alert notification queue predicted to run full in less than 30m.
      expr: |-
        # Without min_over_time, failed scrapes could create false negatives, see
        # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
        (
          predict_linear(prometheus_notifications_queue_length{job="{{ prometheus_operator_chart_release_name }}-prometheus",namespace="default"}[5m], 60 * 30)
        >
          min_over_time(prometheus_notifications_queue_capacity{job="{{ prometheus_operator_chart_release_name }}-prometheus",namespace="default"}[5m])
        )
      for: 15m
      labels:
        severity: warning
        notify_team: {{ prometheus_alert_teams.sre }}
    - alert: PrometheusErrorSendingAlertsToSomeAlertmanagers
      annotations:
    {% raw %}
        description: '{{ printf "%.1f" $value }}% errors while sending alerts from Prometheus {{$labels.namespace}}/{{$labels.pod}} to Alertmanager {{$labels.alertmanager}}.'
    {% endraw %}
        runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/prometheuserrorsendingalertstosomealertmanagers
        summary: Prometheus has encountered more than 1% errors sending alerts to a specific Alertmanager.
      expr: |-
        (
          rate(prometheus_notifications_errors_total{job="{{ prometheus_operator_chart_release_name }}-prometheus",namespace="default"}[5m])
        /
          rate(prometheus_notifications_sent_total{job="{{ prometheus_operator_chart_release_name }}-prometheus",namespace="default"}[5m])
        )
        * 100
        > 1
      for: 15m
      labels:
        severity: warning
        notify_team: {{ prometheus_alert_teams.sre }}
    - alert: PrometheusNotConnectedToAlertmanagers
      annotations:
    {% raw %}
        description: Prometheus {{$labels.namespace}}/{{$labels.pod}} is not connected to any Alertmanagers.
    {% endraw %}
        runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/prometheusnotconnectedtoalertmanagers
        summary: Prometheus is not connected to any Alertmanagers.
      expr: |-
        # Without max_over_time, failed scrapes could create false negatives, see
        # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
        max_over_time(prometheus_notifications_alertmanagers_discovered{job="{{ prometheus_operator_chart_release_name }}-prometheus",namespace="default"}[5m]) < 1
      for: 10m
      labels:
        severity: warning
        notify_team: {{ prometheus_alert_teams.sre }}
    - alert: PrometheusTSDBReloadsFailing
      annotations:
    {% raw %}
        description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has detected {{$value | humanize}} reload failures over the last 3h.
    {% endraw %}
        runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/prometheustsdbreloadsfailing
        summary: Prometheus has issues reloading blocks from disk.
      expr: increase(prometheus_tsdb_reloads_failures_total{job="{{ prometheus_operator_chart_release_name }}-prometheus",namespace="default"}[3h]) > 0
      for: 4h
      labels:
        severity: warning
        notify_team: {{ prometheus_alert_teams.sre }}
    - alert: PrometheusTSDBCompactionsFailing
      annotations:
    {% raw %}
        description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has detected {{$value | humanize}} compaction failures over the last 3h.
    {% endraw %}
        runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/prometheustsdbcompactionsfailing
        summary: Prometheus has issues compacting blocks.
      expr: increase(prometheus_tsdb_compactions_failed_total{job="{{ prometheus_operator_chart_release_name }}-prometheus",namespace="default"}[3h]) > 0
      for: 4h
      labels:
        severity: warning
        notify_team: {{ prometheus_alert_teams.sre }}
    - alert: PrometheusNotIngestingSamples
      annotations:
    {% raw %}
        description: Prometheus {{$labels.namespace}}/{{$labels.pod}} is not ingesting samples.
    {% endraw %}
        runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/prometheusnotingestingsamples
        summary: Prometheus is not ingesting samples.
      expr: |-
        (
          rate(prometheus_tsdb_head_samples_appended_total{job="{{ prometheus_operator_chart_release_name }}-prometheus",namespace="default"}[5m]) <= 0
        and
          (
            sum without(scrape_job) (prometheus_target_metadata_cache_entries{job="{{ prometheus_operator_chart_release_name }}-prometheus",namespace="default"}) > 0
          or
            sum without(rule_group) (prometheus_rule_group_rules{job="{{ prometheus_operator_chart_release_name }}-prometheus",namespace="default"}) > 0
          )
        )
      for: 10m
      labels:
        severity: warning
        notify_team: {{ prometheus_alert_teams.sre }}
    - alert: PrometheusDuplicateTimestamps
      annotations:
    {% raw %}
        description: Prometheus {{$labels.namespace}}/{{$labels.pod}} is dropping {{ printf "%.4g" $value  }} samples/s with different values but duplicated timestamp.
    {% endraw %}
        runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/prometheusduplicatetimestamps
        summary: Prometheus is dropping samples with duplicate timestamps.
      expr: rate(prometheus_target_scrapes_sample_duplicate_timestamp_total{job="{{ prometheus_operator_chart_release_name }}-prometheus",namespace="default"}[5m]) > 0
      for: 10m
      labels:
        severity: warning
        notify_team: {{ prometheus_alert_teams.sre }}
    - alert: PrometheusOutOfOrderTimestamps
      annotations:
    {% raw %}
        description: Prometheus {{$labels.namespace}}/{{$labels.pod}} is dropping {{ printf "%.4g" $value  }} samples/s with timestamps arriving out of order.
    {% endraw %}
        runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/prometheusoutofordertimestamps
        summary: Prometheus drops samples with out-of-order timestamps.
      expr: rate(prometheus_target_scrapes_sample_out_of_order_total{job="{{ prometheus_operator_chart_release_name }}-prometheus",namespace="default"}[5m]) > 0
      for: 10m
      labels:
        severity: warning
        notify_team: {{ prometheus_alert_teams.sre }}
    - alert: PrometheusRemoteStorageFailures
      annotations:
    {% raw %}
        description: Prometheus {{$labels.namespace}}/{{$labels.pod}} failed to send {{ printf "%.1f" $value }}% of the samples to {{ $labels.remote_name}}:{{ $labels.url }}
    {% endraw %}
        runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/prometheusremotestoragefailures
        summary: Prometheus fails to send samples to remote storage.
      expr: |-
        (
          (rate(prometheus_remote_storage_failed_samples_total{job="{{ prometheus_operator_chart_release_name }}-prometheus",namespace="default"}[5m]) or rate(prometheus_remote_storage_samples_failed_total{job="{{ prometheus_operator_chart_release_name }}-prometheus",namespace="default"}[5m]))
        /
          (
            (rate(prometheus_remote_storage_failed_samples_total{job="{{ prometheus_operator_chart_release_name }}-prometheus",namespace="default"}[5m]) or rate(prometheus_remote_storage_samples_failed_total{job="{{ prometheus_operator_chart_release_name }}-prometheus",namespace="default"}[5m]))
          +
            (rate(prometheus_remote_storage_succeeded_samples_total{job="{{ prometheus_operator_chart_release_name }}-prometheus",namespace="default"}[5m]) or rate(prometheus_remote_storage_samples_total{job="{{ prometheus_operator_chart_release_name }}-prometheus",namespace="default"}[5m]))
          )
        )
        * 100
        > 1
      for: 15m
      labels:
        severity: critical
        notify_team: {{ prometheus_alert_teams.sre }}
    - alert: PrometheusRemoteWriteBehind
      annotations:
    {% raw %}
        description: Prometheus {{$labels.namespace}}/{{$labels.pod}} remote write is {{ printf "%.1f" $value }}s behind for {{ $labels.remote_name}}:{{ $labels.url }}.
    {% endraw %}
        runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/prometheusremotewritebehind
        summary: Prometheus remote write is behind.
      expr: |-
        # Without max_over_time, failed scrapes could create false negatives, see
        # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
        (
          max_over_time(prometheus_remote_storage_highest_timestamp_in_seconds{job="{{ prometheus_operator_chart_release_name }}-prometheus",namespace="default"}[5m])
        - ignoring(remote_name, url) group_right
          max_over_time(prometheus_remote_storage_queue_highest_sent_timestamp_seconds{job="{{ prometheus_operator_chart_release_name }}-prometheus",namespace="default"}[5m])
        )
        > 120
      for: 15m
      labels:
        severity: critical
        notify_team: {{ prometheus_alert_teams.sre }}
    - alert: PrometheusRemoteWriteDesiredShards
      annotations:
    {% raw %}
        description: Prometheus {{$labels.namespace}}/{{$labels.pod}} remote write desired shards calculation wants to run {{ $value }} shards for queue {{ $labels.remote_name}}:{{ $labels.url }}, which is more than the max of {{ printf `prometheus_remote_storage_shards_max{instance="%s",job="{{ prometheus_operator_chart_release_name }}-prometheus",namespace="default"}` $labels.instance | query | first | value }}.
    {% endraw %}
        runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/prometheusremotewritedesiredshards
        summary: Prometheus remote write desired shards calculation wants to run more than configured max shards.
      expr: |-
        # Without max_over_time, failed scrapes could create false negatives, see
        # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
        (
          max_over_time(prometheus_remote_storage_shards_desired{job="{{ prometheus_operator_chart_release_name }}-prometheus",namespace="default"}[5m])
        >
          max_over_time(prometheus_remote_storage_shards_max{job="{{ prometheus_operator_chart_release_name }}-prometheus",namespace="default"}[5m])
        )
      for: 15m
      labels:
        severity: warning
        notify_team: {{ prometheus_alert_teams.sre }}
    - alert: PrometheusRuleFailures
      annotations:
    {% raw %}
        description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has failed to evaluate {{ printf "%.0f" $value }} rules in the last 5m.
    {% endraw %}
        runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/prometheusrulefailures
        summary: Prometheus is failing rule evaluations.
      expr: increase(prometheus_rule_evaluation_failures_total{job="{{ prometheus_operator_chart_release_name }}-prometheus",namespace="default"}[5m]) > 0
      for: 15m
      labels:
        severity: critical
        notify_team: {{ prometheus_alert_teams.sre }}
    - alert: PrometheusMissingRuleEvaluations
      annotations:
    {% raw %}
        description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has missed {{ printf "%.0f" $value }} rule group evaluations in the last 5m.
    {% endraw %}
        runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/prometheusmissingruleevaluations
        summary: Prometheus is missing rule evaluations due to slow rule group evaluation.
      expr: increase(prometheus_rule_group_iterations_missed_total{job="{{ prometheus_operator_chart_release_name }}-prometheus",namespace="default"}[5m]) > 0
      for: 15m
      labels:
        severity: warning
        notify_team: {{ prometheus_alert_teams.sre }}
    - alert: PrometheusTargetLimitHit
      annotations:
    {% raw %}
        description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has dropped {{ printf "%.0f" $value }} targets because the number of targets exceeded the configured target_limit.
    {% endraw %}
        runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/prometheustargetlimithit
        summary: Prometheus has dropped targets because some scrape configs have exceeded the targets limit.
      expr: increase(prometheus_target_scrape_pool_exceeded_target_limit_total{job="{{ prometheus_operator_chart_release_name }}-prometheus",namespace="default"}[5m]) > 0
      for: 15m
      labels:
        severity: warning
        notify_team: {{ prometheus_alert_teams.sre }}
    - alert: PrometheusErrorSendingAlertsToAnyAlertmanager
      annotations:
    {% raw %}
        description: '{{ printf "%.1f" $value }}% minimum errors while sending alerts from Prometheus {{$labels.namespace}}/{{$labels.pod}} to any Alertmanager.'
    {% endraw %}
        runbook_url: https://github.com/prometheus-operator/kube-prometheus/wiki/prometheuserrorsendingalertstoanyalertmanager
        summary: Prometheus encounters more than 3% errors sending alerts to any Alertmanager.
      expr: |-
        min without (alertmanager) (
          rate(prometheus_notifications_errors_total{job="{{ prometheus_operator_chart_release_name }}-prometheus",namespace="default",alertmanager!~``}[5m])
        /
          rate(prometheus_notifications_sent_total{job="{{ prometheus_operator_chart_release_name }}-prometheus",namespace="default",alertmanager!~``}[5m])
        )
        * 100
        > 3
      for: 15m
      labels:
        severity: critical
        notify_team: {{ prometheus_alert_teams.sre }}
{% endif %}
